apiVersion: v1
items:
- apiVersion: image.openshift.io/v1
  kind: ImageStream
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewApp
    labels:
      app: mongodb
      app.kubernetes.io/component: mongodb
      app.kubernetes.io/instance: mongodb
    name: mongodb
  spec:
    lookupPolicy:
      local: false
    tags:
    - annotations:
        openshift.io/imported-from: bitnami/mongodb:latest
      from:
        kind: DockerImage
        name: bitnami/mongodb:latest
      importPolicy:
        importMode: Legacy
      name: latest
      referencePolicy:
        type: ""
  status:
    dockerImageRepository: ""
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      image.openshift.io/triggers: '[{"from":{"kind":"ImageStreamTag","name":"mongodb:latest"},"fieldPath":"spec.template.spec.containers[?(@.name==\"mongodb\")].image"}]'
      openshift.io/generated-by: OpenShiftNewApp
    creationTimestamp: null
    labels:
      app: mongodb
      app.kubernetes.io/component: mongodb
      app.kubernetes.io/instance: mongodb
    name: mongodb
  spec:
    replicas: 1
    selector:
      matchLabels:
        deployment: mongodb
    strategy: {}
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftNewApp
        creationTimestamp: null
        labels:
          deployment: mongodb
      spec:
        volumes:
        - name: mariadb-storage
          persistentVolumeClaim:
            claimName: mongodb-pvc-jegan # Replace 'jegan' with your name
        containers:
        - image: ' '
          name: mongodb
          ports:
          - containerPort: 27017
            protocol: TCP
          resources: {}
          volumeMounts:
          - name: mariadb-storage
            mountPath: /bitnami/mongodb/data
  status: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewApp
    creationTimestamp: null
    labels:
      app: mongodb
      app.kubernetes.io/component: mongodb
      app.kubernetes.io/instance: mongodb
    name: mongodb
  spec:
    ports:
    - name: 27017-tcp
      port: 27017
      protocol: TCP
      targetPort: 27017
    selector:
      deployment: mongodb
  status:
    loadBalancer: {}
kind: List
metadata: {}
